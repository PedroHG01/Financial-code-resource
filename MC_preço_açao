"""
Utilizando Monte Carlo para estimar o preço de uma ação
"""
import numpy as np
import pandas as pd
from pandas_datareader import data as wb
import matplotlib.pyplot as plt
from scipy.stats import norm


ticker = 'PG'
data = pd.DataFrame()
data[ticker]= wb.DataReader(ticker,'yahoo','2007-1-1')['Adj Close']

log_returns = np.log(1 + data.pct_change())
# data.plot(figsize=(10,4))
# log_returns.plot(figsize=(10,4))
# plt.show()
u = log_returns.mean()
var = log_returns.var()
drift = u - (0.5 * var)  #melhor aprox. das taxas futuras de retorno de uma ação (valores de taxa de ret. diários)
# print(drift)
stdev = log_returns.std()   #desvio padrão
t_intervals = 1000
iterations = 10
daily_returns = np.exp(np.array(drift) + np.array(stdev) * norm.ppf(np.random.rand(t_intervals,iterations)))
s0 = data.iloc[-1]
price_list = np.zeros_like(daily_returns)
#cria uma matriz cheia de "0" com o mesmo número de elementos da matriz dentro dos parenteses
price_list[0] = s0  #trava toda a primeira linha com o valor da última ação
for t in range(1, t_intervals):
    price_list[t] = price_list[t-1] * daily_returns[t]
plt.figure(figsize=(10,4))
plt.plot(price_list)
plt.show()
