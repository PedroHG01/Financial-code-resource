"""
Precificação de opções de contrato de derivativos com a fórmula de Black Scholes
"""
import numpy as np
import pandas as pd
from pandas_datareader import data as wb
from scipy.stats import norm


"""
S - preço das ações
K - Preço de exercício
r - Taxa livre de risco
stdev - Desvio padrão
T - Intervalo de tempo
"""

def d1(S, K, r, stdev, T):
    return (np.log(S / K) + (r + stdev ** 2 / 2) * T)/ (stdev * np.sqrt(T))
def d2(S, K, r, stdev, T):
    return (np.log(S / K) + (r - stdev ** 2 / 2) * T)/ (stdev * np.sqrt(T))
def BSM(S, K, r, stdev, T):
    return (S * norm.cdf(d1(S, K, r, stdev, T))) - (K * np.exp(-r * T)* norm.cdf(d2(S, K, r, stdev, T)))

Ticker = 'PG'
data = pd.DataFrame()
data[Ticker] = wb.DataReader(Ticker, data_source='yahoo', start='2007-1-1', end='2017-3-21')['Adj Close']
S = data.iloc[-1]
log_returns = np.log(1 + data.pct_change())
stdev = log_returns.std()
r = 0.025
K = 110.0
T = 1  # 1 ano
print(d1(S, K, r, stdev, T), d2(S, K, r, stdev, T), BSM(S, K, r, stdev, T))
